# Requires the use of https://github.com/joseph-greiner/klipper_tc_automatic_offset_calibration
#
###########################################################################################################################################
#####################################################################
#   TC_ENDSTOP_AND_NUDGE_ACCURACY
#####################################################################

[gcode_macro TC_ENDSTOP_AND_NUDGE_ACCURACY]
description: Compares nudge repeatability vs. homed endstop repeatability
variable_edge_offset: 15
variable_grid_count: 3
###################### storage variables used for the calculated stuffies
variable_homed_pos: ""
variable_unhomed_pos: ""
gcode:
  SET_GCODE_VARIABLE MACRO=_TC_NUDGE_ACCURACY_LOOP VARIABLE=unhomed VALUE=0
  SET_GCODE_VARIABLE MACRO=_TC_NUDGE_ACCURACY_LOOP VARIABLE=homed VALUE=0
  #SET_GCODE_VARIABLE MACRO=TC_ENDSTOP_AND_NUDGE_ACCURACY VARIABLE=unhomed_pos VALUE={""}
  #SET_GCODE_VARIABLE MACRO=TC_ENDSTOP_AND_NUDGE_ACCURACY VARIABLE=homed_pos VALUE={""}
  RESPOND MSG="Starting measurement loop..."
  _TC_NUDGE_ACCURACY_LOOP
  

#####################################################################
#   _TC_NUDGE_ACCURACY_LOOP
#####################################################################

[gcode_macro _TC_NUDGE_ACCURACY_LOOP]
variable_homed: 0
variable_unhomed: 0
gcode:
  {% set grid_count = printer["gcode_macro TC_ENDSTOP_AND_NUDGE_ACCURACY"].grid_count|int %}
  {% set edge_offset = printer["gcode_macro TC_ENDSTOP_AND_NUDGE_ACCURACY"].edge_offset|float %}
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float - edge_offset %}
  {% set min_x = printer.configfile.config["stepper_x"]["position_min"]|float + edge_offset %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float - edge_offset %}
  {% set min_y = printer.configfile.config["stepper_y"]["position_min"]|float + edge_offset %}
  {% set feed = printer.configfile.config["toolchanger"]["params_fast_speed"]|int %}
  {% set total_points = grid_count * grid_count %}

  {% if unhomed < total_points %}
    {% set x = min_x + (max_x - min_x) * (unhomed % grid_count) / (grid_count - 1) %}
    {% set y = min_y + (max_y - min_y) * (unhomed // grid_count) / (grid_count - 1) %}
    RESPOND MSG="Unhomed iteration {unhomed} at X={x|round(1)} Y={y|round(1)}"
    G0 X{x} Y{y} F{feed}
    _NUDGE_FIND_TOOL_BASELINE
    SET_GCODE_VARIABLE MACRO=_TC_NUDGE_ACCURACY_LOOP VARIABLE=unhomed VALUE={unhomed+1}
    {% if printer.toolchanger.params_debug_toolchanger %}
      RESPOND MSG="calling _TC_NUDGE_DATA_COLLECT_LOOP"
    {% endif %}
    UPDATE_DELAYED_GCODE ID=_TC_NUDGE_DATA_COLLECT_LOOP DURATION=1

  {% elif homed < total_points %}
    {% set x = min_x + (max_x - min_x) * (homed % grid_count) / (grid_count - 1) %}
    {% set y = min_y + (max_y - min_y) * (homed // grid_count) / (grid_count - 1) %}
    RESPOND MSG="Homed iteration {homed} at X={x|round(1)} Y={y|round(1)}"
    G0 X{x} Y{y} F{feed}
    G28 X Y
    _NUDGE_FIND_TOOL_BASELINE
    SET_GCODE_VARIABLE MACRO=_TC_NUDGE_ACCURACY_LOOP VARIABLE=homed VALUE={homed+1}
    {% if printer.toolchanger.params_debug_toolchanger %}
      RESPOND MSG="calling _TC_NUDGE_DATA_COLLECT_LOOP"
    {% endif %}
    UPDATE_DELAYED_GCODE ID=_TC_NUDGE_DATA_COLLECT_LOOP DURATION=1

  {% else %}
    RESPOND MSG="All measurements done. Analyzing..."
    _MOVE_TO_CENTER
    _TC_NUDGE_ANALYZE_AND_PRINT
  {% endif %}

#####################################################################
#   _TC_NUDGE_DATA_COLLECT_LOOP
#####################################################################

[delayed_gcode _TC_NUDGE_DATA_COLLECT_LOOP]
gcode:
  {% if printer.toolchanger.params_debug_toolchanger %}
  RESPOND MSG="_TC_NUDGE_DATA_COLLECT_LOOP start"
  {% endif %}
  
  {% set loop = printer["gcode_macro _TC_NUDGE_ACCURACY_LOOP"] %}
  {% set parent = printer["gcode_macro TC_ENDSTOP_AND_NUDGE_ACCURACY"] %}
  {% set current_homed = loop.homed|int %}
  {% set current_unhomed = loop.unhomed|int %}
  {% set grid_count = parent.grid_count|int %}
  {% set current_homed_pos_string = parent.homed_pos|string %}
  {% set current_unhomed_pos_string = parent.unhomed_pos|string %}
  {% set last_x = printer.tools_calibrate.last_x_result|float|round(4) %}
  {% set last_y = printer.tools_calibrate.last_y_result|float|round(4) %}
  {% set last_z = printer.tools_calibrate.last_z_result|float|round(4) %}
  {% set last_x_string = last_x|string %}
  {% set last_y_string = last_y|string %}
  {% set last_z_string = last_z|string %}

  ######## horrors beyond comprehension follow after this point. 
  ######## we are converting our whole array of coordinates into a string and making a really long string of coordinate points just to later split it.
  {% if current_unhomed < grid_count * grid_count %}
    {% set stringAddition = current_unhomed_pos_string|string + "u_x" + last_x_string + "y" + last_y_string + "z" + last_z_string + ";" %}
    SET_GCODE_VARIABLE MACRO=TC_ENDSTOP_AND_NUDGE_ACCURACY VARIABLE=unhomed_pos VALUE='"{stringAddition}"'
  {% elif current_homed < grid_count * grid_count %}
    {% set stringAddition = current_homed_pos_string|string + "h_x" + last_x_string + "y" + last_y_string + "z" + last_z_string + ";" %}
    SET_GCODE_VARIABLE MACRO=TC_ENDSTOP_AND_NUDGE_ACCURACY VARIABLE=homed_pos VALUE='"{stringAddition}"'
  {% endif %}
  {% if printer.toolchanger.params_debug_toolchanger %}
  RESPOND MSG="calling _TC_NUDGE_ACCURACY_LOOP"
  {% endif %}
  _TC_NUDGE_ACCURACY_LOOP

#####################################################################
#   _TC_NUDGE_ANALYZE_AND_PRINT
#####################################################################

[gcode_macro _TC_NUDGE_ANALYZE_AND_PRINT]
gcode:
    {% if printer.toolchanger.params_debug_toolchanger %}
      RESPOND MSG="_TC_NUDGE_ANALYZE_AND_PRINT start"
    {% endif %}
  {% set parent = printer["gcode_macro TC_ENDSTOP_AND_NUDGE_ACCURACY"] %}
  {% set unhomed_str = parent.unhomed_pos|string %}
  {% set homed_str = parent.homed_pos|string %}

  {% set nohomo_ns = namespace(sum_x=0.0, sum_y=0.0, sum_z=0.0, sum_sqr_x=0.0, sum_sqr_y=0.0, sum_sqr_z=0.0, count=0) %}
  {% set homo_ns = namespace(sum_x=0.0, sum_y=0.0, sum_z=0.0, sum_sqr_x=0.0, sum_sqr_y=0.0, sum_sqr_z=0.0, count=0) %}

  ######## le string horrors
  {% for entry in unhomed_str.split(';') %}
    {% if entry.startswith("u_") %}
      {% set x_idx = entry.find('x') %}
      {% set y_idx = entry.find('y') %}
      {% set z_idx = entry.find('z') %}
      {% if x_idx != -1 and y_idx != -1 and z_idx != -1 %}
        {% set x_val = entry[x_idx+1:y_idx]|float %}
        {% set y_val = entry[y_idx+1:z_idx]|float %}
        {% set z_val = entry[z_idx+1:]|float %}
        {% set nohomo_ns.sum_x = nohomo_ns.sum_x + x_val %}
        {% set nohomo_ns.sum_y = nohomo_ns.sum_y + y_val %}
        {% set nohomo_ns.sum_z = nohomo_ns.sum_z + z_val %}
        {% set nohomo_ns.sum_sqr_x = nohomo_ns.sum_sqr_x + x_val*x_val %}
        {% set nohomo_ns.sum_sqr_y = nohomo_ns.sum_sqr_y + y_val*y_val %}
        {% set nohomo_ns.sum_sqr_z = nohomo_ns.sum_sqr_z + z_val*z_val %}
        {% set nohomo_ns.count = nohomo_ns.count + 1 %}
      {% endif %}
    {% endif %}
  {% endfor %}

  {% for entry in homed_str.split(';') %}
    {% if entry.startswith("h_") %}
      {% set x_idx = entry.find('x') %}
      {% set y_idx = entry.find('y') %}
      {% set z_idx = entry.find('z') %}
      {% if x_idx != -1 and y_idx != -1 and z_idx != -1 %}
        {% set x_val = entry[x_idx+1:y_idx]|float %}
        {% set y_val = entry[y_idx+1:z_idx]|float %}
        {% set z_val = entry[z_idx+1:]|float %}
        {% set homo_ns.sum_x = homo_ns.sum_x + x_val %}
        {% set homo_ns.sum_y = homo_ns.sum_y + y_val %}
        {% set homo_ns.sum_z = homo_ns.sum_z + z_val %}
        {% set homo_ns.sum_sqr_x = homo_ns.sum_sqr_x + x_val*x_val %}
        {% set homo_ns.sum_sqr_y = homo_ns.sum_sqr_y + y_val*y_val %}
        {% set homo_ns.sum_sqr_z = homo_ns.sum_sqr_z + z_val*z_val %}
        {% set homo_ns.count = homo_ns.count + 1 %}
      {% endif %}
    {% endif %}
  {% endfor %}

  ######## the nudge knows where it is because it knows where it isnt, and by substracting where it is from where it isnt,
  {% set un_mean_x = nohomo_ns.sum_x / nohomo_ns.count %}
  {% set un_mean_y = nohomo_ns.sum_y / nohomo_ns.count %}
  {% set un_mean_z = nohomo_ns.sum_z / nohomo_ns.count %}
  {% set un_stdev_x = ((nohomo_ns.sum_sqr_x / nohomo_ns.count) - un_mean_x*un_mean_x)**0.5 %}
  {% set un_stdev_y = ((nohomo_ns.sum_sqr_y / nohomo_ns.count) - un_mean_y*un_mean_y)**0.5 %}
  {% set un_stdev_z = ((nohomo_ns.sum_sqr_z / nohomo_ns.count) - un_mean_z*un_mean_z)**0.5 %}

  ######## or where it isnt from where it is (whichever is greater) and arriving at a position where it wasnt (and is now)
  {% set ho_mean_x = homo_ns.sum_x / homo_ns.count %}
  {% set ho_mean_y = homo_ns.sum_y / homo_ns.count %}
  {% set ho_mean_z = homo_ns.sum_z / homo_ns.count %}
  {% set ho_stdev_x = ((homo_ns.sum_sqr_x / homo_ns.count) - ho_mean_x*ho_mean_x)**0.5 %}
  {% set ho_stdev_y = ((homo_ns.sum_sqr_y / homo_ns.count) - ho_mean_y*ho_mean_y)**0.5 %}
  {% set ho_stdev_z = ((homo_ns.sum_sqr_z / homo_ns.count) - ho_mean_z*ho_mean_z)**0.5 %}

  RESPOND MSG="-- Nudge (UNHOMED) --"
  RESPOND MSG="Mean X={un_mean_x|round(4)}, Y={un_mean_y|round(4)}, Z={un_mean_z|round(4)}"
  RESPOND MSG="Std  X={un_stdev_x|round(5)}, Y={un_stdev_y|round(5)}, Z={un_stdev_z|round(5)}"

  RESPOND MSG="-- Nudge (HOMED) --"
  RESPOND MSG="Mean X={ho_mean_x|round(4)}, Y={ho_mean_y|round(4)}, Z={ho_mean_z|round(4)}"
  RESPOND MSG="Std  X={ho_stdev_x|round(5)}, Y={ho_stdev_y|round(5)}, Z={ho_stdev_z|round(5)}"

  RESPOND MSG="Done! Compare unhomed vs. homed stdev to gauge endstop accuracy."
