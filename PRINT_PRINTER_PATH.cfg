gcode_macro PRINT_PRINTER_PATH]
description: "prints the contents of printer.$PATH$, use FORCE=1 to print longer messages"
variable_cutoff: 80
gcode:
    {% set force_print = params.FORCE|default(0)|int %}
    {% set path_str = params.PATH %}
    {% set parts = path_str.split('.') %}
    {% set cutoff = cutoff|int %}
    {% set ns = namespace(invalid=False, current=printer) %}

    {% for part in parts %}
        {% if not ns.invalid %}
            {% set keys = ns.current|list %}
            {% if part in keys %}
                {% set ns.current = ns.current[part] %}
            {% else %}
                RESPOND TYPE=echo MSG="Invalid part '{part}' in path '{path_str}'."
                {% if keys|length > 0 %}
                    {% set keys_ns = namespace(keys_str="", stop=False, truncated=False) %}
                    {% for k in keys %}
                        {% if not keys_ns.stop %}
                            {% set tentative = keys_ns.keys_str + k + ", " %}
                            {% if force_print or tentative|length <= cutoff %}
                                {% set keys_ns.keys_str = tentative %}
                            {% else %}
                                {% set remaining = keys|length - loop.index0 %}
                                RESPOND TYPE=echo MSG="Available keys here: {keys_ns.keys_str}...truncated {remaining} keys. Use FORCE=1 to print all."
                                {% set keys_ns.stop = True %}
                                {% set keys_ns.truncated = True %}
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                    {% if not keys_ns.truncated %}
                        RESPOND TYPE=echo MSG="Available keys here: {keys_ns.keys_str}"
                    {% endif %}
                {% else %}
                    RESPOND TYPE=echo MSG="No keys available at this level."
                {% endif %}
                {% set ns.invalid = True %}
            {% endif %}
        {% endif %}
    {% endfor %}

    {% if not ns.invalid %}
        {% if ns.current is string or ns.current is number or ns.current is boolean or ns.current is none %}
            {% set val_str = ns.current|string %}
            {% if ns.current is string %}
                {% set type_str = "string" %}
            {% elif ns.current is number %}
                {% set type_str = "number" %}
            {% elif ns.current is boolean %}
                {% set type_str = "boolean" %}
            {% elif ns.current is none %}
                {% set type_str = "none" %}
            {% else %}
                {% set type_str = "unknown" %}
            {% endif %}
            RESPOND TYPE=echo MSG="Value at 'printer.{path_str}': '{val_str}'  (type: '{type_str}')"
        {% else %}
            {% set current_str = ns.current|string %}
            {% if current_str[0] == "[" and current_str[-1] == "]" %}
                RESPOND TYPE=echo MSG="Value at 'printer.{path_str}': {current_str}"
            {% else %}
                {% set all_keys = ns.current|list %}
                {% if all_keys|length > 0 %}
                    RESPOND TYPE=echo MSG="Contents of 'printer.{path_str}':"
                    {% for k in all_keys %}
						{% set keys_ns = namespace(print_count=0) %}
						{% for k in all_keys %}
							{% set keys_ns.print_count = keys_ns.print_count + 1 %}

							{% set key_ns = namespace(trimmed_key=k) %}
							{% if not force_print and k|length > cutoff %}
								{% set key_ns.trimmed_key = k[:cutoff - 3] + "..." %}
							{% endif %}

							{% set v_raw = ns.current[k]|string %}
							{% set val_ns = namespace(trimmed=v_raw) %}
							{% if v_raw|length > cutoff and not force_print %}
								{% set val_ns.trimmed = v_raw[:cutoff - 3] + "..." %}
							{% endif %}

							{% set v_lower = v_raw|lower %}
							{% if v_lower == "true" or v_lower == "false" %}
								{% set val_type = "bool" %}
							{% elif v_raw[0] == "[" and v_raw[-1] == "]" and v_raw[1] == "{" and v_raw[-2] == "}" %}
								{% set val_type = "list of dicks" %}
							{% elif v_raw[0] == "[" and v_raw[-1] == "]" %}
								{% set val_type = "list" %}
							{% elif v_raw[0] == "{" and v_raw[-1] == "}" %}
								{% set val_type = "dict" %}
							{% endif %}

							{% if val_type is defined %}
								{% if val_type == "list of dicks" %}
									{% set count_ns = namespace(count=0) %}
									{% for c in v_raw %}
										{% if c == "}" %}
											{% set count_ns.count = count_ns.count + 1 %}
										{% endif %}
									{% endfor %}
									RESPOND TYPE=echo MSG="  {key_ns.trimmed_key}: (list with {count_ns.count} dicts)"
								{% else %}
									RESPOND TYPE=echo MSG="  {key_ns.trimmed_key}: '{val_ns.trimmed}'  (type: '{val_type}')"
								{% endif %}
							{% else %}
								RESPOND TYPE=echo MSG="  {key_ns.trimmed_key}: '{val_ns.trimmed}'"
							{% endif %}
						{% endfor %}

						{% if not force_print and all_keys|length > keys_ns.print_count %}
							{% set remaining = all_keys|length - keys_ns.print_count %}
							RESPOND TYPE=echo MSG="...truncated {remaining} keys. Use FORCE=1 to print all."
						{% endif %}
                {% else %}
                    RESPOND TYPE=echo MSG="'{path_str}' has no keys or contents."
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}
